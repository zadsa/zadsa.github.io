<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>小型卫星地面站</title>
      <link href="/2018/12/15/xiao-xing-wei-xing-di-mian-zhan/"/>
      <url>/2018/12/15/xiao-xing-wei-xing-di-mian-zhan/</url>
      
        <content type="html"><![CDATA[<p>小型卫星地面站系统由智讯创新团队，哈工大威海业余无线电俱乐部负责研发。初步计划完成地面站系统初样，实现稳定工作，并完成星地链路通信，通联紫丁香一号卫星Lilacsat-1（LO-90），接收卫星下传图片。</p><h2 id="紫丁香1号卫星简介"><a href="#紫丁香1号卫星简介" class="headerlink" title="紫丁香1号卫星简介"></a>紫丁香1号卫星简介</h2><p>紫丁香一号是哈工大学生团队研制的一颗2U立方体卫星，以大气低热层科学探测为主要任务，重仅2 kg，参与欧洲QB50计划，于2017.4搭载货运飞船前往国际空间站，再由日本实验舱机械臂弹射入轨。</p><p>紫丁香一号的主要载荷是伦敦大学学院(UCL)研制的离子和中性粒子质谱仪(INMS)，可测量带电离子和中性原子的质量与分布情况。全球高校研制的48颗卫星协同工作，对人类尚未深入涉足的大气低热层开展实地研究。除科学载荷外，紫丁香一号还搭载了FM/Codec2-BPSK转发器和彩色CCD相机。FM/Codec2-BPSK转发器是一种新体制的业余无线电卫星转发器，上行使用传统的FM模拟语音，在星上进行数字化，由开源声码器Codec2进行数据压缩，并与遥测数据融合后下传，可有效提高功率与频谱利用效率以及遥测数据流量。彩色CCD相机设计有公开的拍摄与下传接口，可由爱好者发送指令进行操作。</p><p>紫丁香1号的U/VHF业余无线电载荷信息如下：</p><p><img src="https://ws1.sinaimg.cn/large/006lWeFfly1g19bse0r12j30qg0kzab7.jpg" alt></p><p>卫星地面站通过OpenATS天线追踪系统（<a href="https://github.com/OpenATS/OpenATS）控制自制的数字旋转器实时对准Lilacsat-1，当卫星过境时控制电台发射image指令（0x00，0x55，0xaa）控制紫丁香1号拍照并下传图像，通过紫丁香团队的gnuradio解调程序进行图像解调，恢复原始图像信息。系统整体结构框图如下：" target="_blank" rel="noopener">https://github.com/OpenATS/OpenATS）控制自制的数字旋转器实时对准Lilacsat-1，当卫星过境时控制电台发射image指令（0x00，0x55，0xaa）控制紫丁香1号拍照并下传图像，通过紫丁香团队的gnuradio解调程序进行图像解调，恢复原始图像信息。系统整体结构框图如下：</a></p><h2 id="发射机方案"><a href="#发射机方案" class="headerlink" title="发射机方案"></a>发射机方案</h2><p>发射机采用Yaesu FT-8900R无线电台，计算机通过电台控制PCB转接板控制无线电台，发射指令控制卫星相机载荷，发射天线采用V段10单元八木，增益11.6dBi，驻波比小于1.3。</p><h2 id="2019-03-16测试"><a href="#2019-03-16测试" class="headerlink" title="2019.03.16测试"></a>2019.03.16测试</h2><p>​    </p>]]></content>
      
      
      <categories>
          
          <category> 业余无线电 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> gnuradio </tag>
            
            <tag> 螺旋天线制作 </tag>
            
            <tag> 机械结构 </tag>
            
            <tag> LNA </tag>
            
            <tag> OpenATS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于GitHub和Hexo搭建个人博客</title>
      <link href="/2018/03/08/ji-yu-github-he-hexo-da-jian-ge-ren-bo-ke/"/>
      <url>/2018/03/08/ji-yu-github-he-hexo-da-jian-ge-ren-bo-ke/</url>
      
        <content type="html"><![CDATA[<p>本文是使用Mac电脑, 基于GitHub和Hexo搭建个人博客, 搞了两三天, 反复尝试了无数次, 踩了无数坑搭建起来的, 主要跟大家分享一点小经验, 希望对大家能有帮助!</p><a id="more"></a><h2 id="github博客简介"><a href="#github博客简介" class="headerlink" title="github博客简介"></a>github博客简介</h2><p>github 是全球最大的社交编程及代码托管网站，GitHub可以托管各种git库，并提供一个web界面，但与其它像SourceForge或Google Code这样的服务不同，GitHub的独特卖点在于从另外一个项目进行分支的简易性。这里着重写如何使用Github的page功能搭建个人博客!</p><blockquote><p>使用github pages服务搭建博客的好处有：</p></blockquote><ul><li>全是静态文件，访问速度快；</li><li>免费方便，不用花一分钱就可以搭建一个自由的个人博客，不需要服务器不需要后台；</li><li>可以随意绑定自己的域名，不仔细看的话根本看不出来你的网站是基于github的；</li><li>数据绝对安全，基于github的版本管理，想恢复到哪个历史版本都行；</li><li>博客内容可以轻松打包、转移、发布到其它平台；</li></ul><h2 id="准备工作"><a href="#准备工作" class="headerlink" title="准备工作"></a>准备工作</h2><ul><li>有一个<a href="https://github.com/login?return_to=%2Fjoin%3Fsource%3Dheader-home" target="_blank" rel="noopener">github账号</a>，没有的话去<a href="https://github.com/join?source=header-home" target="_blank" rel="noopener">GitHub注册</a>一个</li><li>安装了<a href="https://nodejs.org/en/" target="_blank" rel="noopener">node.js</a>、npm，并了解相关基础知识</li><li>安装了git </li></ul><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><h3 id="安装Node-js"><a href="#安装Node-js" class="headerlink" title="安装Node.js"></a>安装Node.js</h3><ul><li>用来生成静态页面, 到<a href="https://nodejs.org/en/" target="_blank" rel="noopener">Node.js官网</a>，下载最新版本, 根据提示一路安装即可</li><li><code>Node.js</code>默认会安装 npm</li><li>也可以使用<code>Homebrew</code>进行命令安装, 详情参考<a href="https://reactnative.cn/docs/0.51/getting-started.html#content" target="_blank" rel="noopener">React Native中文网</a>安装方法</li></ul><h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><ul><li>用来将本地Hexo内容提交到Github上。下载的Xcode自带Git，这里不再赘述。</li><li>如果没有Xcode可以参考<a href="https://hexo.io/docs/" target="_blank" rel="noopener">Hexo官网</a>上的安装方法</li><li>通用版的<a href="https://www.git-scm.com/download/win" target="_blank" rel="noopener">Git安装</a>, 无法下载的童鞋，可以去网上搜索下载</li></ul><h3 id="安装Hexo"><a href="#安装Hexo" class="headerlink" title="安装Hexo"></a>安装Hexo</h3><p>当Node.js和Git都安装好后就可以正式安装Hexo了，终端执行如下命令：</p><pre class="line-numbers language-objc"><code class="language-objc">sudo npm install -g hexo<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>此时, 会提示你输入管理员密码(电脑密码), 开始安装</p><h2 id="本地搭建-hexo-静态博客"><a href="#本地搭建-hexo-静态博客" class="headerlink" title="本地搭建 hexo 静态博客"></a>本地搭建 hexo 静态博客</h2><ul><li>在电脑中新建一个文件夹, 文件夹名字随意, 如MyBlog</li><li>在终端, cd 进入该文件夹</li><li>终端运行 git, 生成hexo模板，可能要翻墙</li></ul><pre class="line-numbers language-objc"><code class="language-objc">hexo init<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p> 安装完模板, 安装npm</p><pre class="line-numbers language-objc"><code class="language-objc">npm install<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>最后, 开启hexo服务器</p><pre class="line-numbers language-objc"><code class="language-objc">hexo s<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>此时，浏览器中打开网址<a href="http://localhost:4000，能看到如下页面：" target="_blank" rel="noopener">http://localhost:4000，能看到如下页面：</a></p><p><img src="http://upload-images.jianshu.io/upload_images/4122543-dfe49f13bcfd743d.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/600" alt="Snip20180303_1.png"></p><h2 id="将博客与Github关联"><a href="#将博客与Github关联" class="headerlink" title="将博客与Github关联"></a>将博客与Github关联</h2><h3 id="在GitHub上配置SSH-key"><a href="#在GitHub上配置SSH-key" class="headerlink" title="在GitHub上配置SSH key"></a>在GitHub上配置SSH key</h3><p>为什么要配置这个呢？因为你提交代码肯定要拥有你的github权限才可以，但是直接使用用户名和密码太不安全了，所以我们使用ssh key来解决本地和服务器的连接问题。</p><h4 id="首先检查本机是否存在的ssh密钥"><a href="#首先检查本机是否存在的ssh密钥" class="headerlink" title="首先检查本机是否存在的ssh密钥"></a>首先检查本机是否存在的ssh密钥</h4><ul><li>如果存在, 直接进行步骤1.3, 否则执行步骤1.2生成新的密钥</li><li>打开终端输入, 注意<code>~/.ssh</code>之间没有空格</li></ul><pre class="line-numbers language-objc"><code class="language-objc">cd ~/.ssh<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果提示：No such file or directory 说明你是第一次使用git, 或者之前没有安装过SSh密钥</p><h4 id="生成新的ssh-key"><a href="#生成新的ssh-key" class="headerlink" title="生成新的ssh key"></a>生成新的ssh key</h4><p>注意后面添加自己注册GitHub的邮箱地址, 打开终端输入</p><pre class="line-numbers language-objc"><code class="language-objc">ssh-keygen -t rsa -C "邮件地址"<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><ul><li>输入命令后, 然后连续回车, 默认会在相应路径下（~/.ssh/id_rsa.pub）生成id_rsa和id_rsa.pub两个文件</li><li>打开’访达’, 选择进入文件夹(快捷键Command+Shift+G), 输入~/.ssh, 进入该文件夹</li></ul><h4 id="将ssh-key添加到Github中"><a href="#将ssh-key添加到Github中" class="headerlink" title="将ssh key添加到Github中"></a>将ssh key添加到Github中</h4><p>打开用户目录，找到.ssh\id_rsa.pub文件，记事本打开并复制里面的内容，打开你的github主页，进入个人设置 -&gt; SSH and GPG keys -&gt; New SSH key：</p><p>将刚复制的内容粘贴到key那里，title随便填，保存</p><h4 id="测试SSH配置是否成功"><a href="#测试SSH配置是否成功" class="headerlink" title="测试SSH配置是否成功"></a>测试SSH配置是否成功</h4><pre class="line-numbers language-objc"><code class="language-objc">ssh -T git@github.com  <span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如果提示<code>Are you sure you want to continue connecting (yes/no)?</code>，输入<code>yes</code>，然后会看到：</p><pre class="line-numbers language-objc"><code class="language-objc">Hi XXXX! You've successfully authenticated, but GitHub does not provide shell access.<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>看到这个信息说明SSH已配置成功！</p><h4 id="更改GitHub用户名和邮箱"><a href="#更改GitHub用户名和邮箱" class="headerlink" title="更改GitHub用户名和邮箱"></a>更改GitHub用户名和邮箱</h4><pre class="line-numbers language-objc"><code class="language-objc">$ git config --global user.name XXXX// 你的github用户名，非昵称$ git config --global user.email  "xxx@qq.com"// 填写你的github注册邮箱<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><h3 id="关联Github"><a href="#关联Github" class="headerlink" title="关联Github"></a>关联Github</h3><h4 id="新建XXX-github-io-的项目"><a href="#新建XXX-github-io-的项目" class="headerlink" title="新建XXX.github.io 的项目"></a>新建XXX.github.io 的项目</h4><p> 在 Github 上创建名字为 XXX.github.io 的项目，XXX为必须和自己的 github 用户名一模一样</p><h4 id="修改-config-yml文件配置"><a href="#修改-config-yml文件配置" class="headerlink" title="修改_config.yml文件配置"></a>修改<code>_config.yml</code>文件配置</h4><ul><li>打开本地的 MyBlog 文件夹项目内的_config.yml 配置文件</li><li>将其中的 type 设置为git，repository 是你 github.io 仓库的 git 地址, 如下所示</li><li>此处切记, 每一个毛好的后面都要加一个空格, 垂直方向一定要对齐, 否则可能会报错</li></ul><pre class="line-numbers language-objc"><code class="language-objc">deploy:  type: git  repository: https://github.com/CoderTitan/CoderTitan.github.io.git  branch: master<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><h4 id="将配置文件上传GitHub"><a href="#将配置文件上传GitHub" class="headerlink" title="将配置文件上传GitHub"></a>将配置文件上传GitHub</h4><ul><li>打开终端, cd到MyBlog文件夹下, 以下命令均在MyBlog文件夹下执行</li></ul><p>在blog文件夹目录下执行生成静态页面命令：</p><pre class="line-numbers language-objc"><code class="language-objc">hexo generate     或者：hexo g<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>此时若出现如下报错：</p><pre class="line-numbers language-objc"><code class="language-objc">ERROR Local hexo not found in ~/blogERROR Try runing: 'npm install hexo --save'<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>则执行命令：</p><pre class="line-numbers language-objc"><code class="language-objc">npm install hexo --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>再执行配置命令：</p><pre class="line-numbers language-objc"><code class="language-objc">hexo deploy           或者：hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>报错一: 若执行命令hexo deploy仍然报错：无法连接git或找不到git，则执行如下命令来安装hexo-deployer-git：</p><pre class="line-numbers language-objc"><code class="language-objc">npm install hexo-deployer-git --save<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>报错二: 若执行命令hexo d报以下错误:</p><pre class="line-numbers language-objc"><code class="language-objc">ERROR Plugin load failed: hexo-server//或者类似的错误ERROR Plugin load failed: hexo-renderer-sass<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>则执行响应的命令:</p><pre class="line-numbers language-objc"><code class="language-objc">sudo npm install hexo-server//或者sudo npm install hexo-renderer-sass<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>解决玩错误之后, 最后在执行</p><pre class="line-numbers language-objc"><code class="language-objc">hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>几个注意的地方：</p><ol><li>注册的邮箱一定要验证，否则不会成功；</li><li>仓库名字必须是：<code>username.github.io</code>，其中<code>username</code>是你的用户名；</li><li>仓库创建成功不会立即生效，需要过一段时间，大概10-30分钟，或者更久，我的等了半个小时才生效；</li><li>hexo d命令执行成功后，浏览器中打开网址<code>http://XXX.github.io</code>（将XXX换成你的用户名）能看到和打开http:<code>//localhost:4000</code>时一样的页面</li></ol></blockquote><h2 id="安装theme主题"><a href="#安装theme主题" class="headerlink" title="安装theme主题"></a>安装theme主题</h2><ul><li>搭建好的默认的主题真的是很丑, 所以这里我们先替换一个好看的主题, 大家更可以到<a href="https://hexo.io/themes/" target="_blank" rel="noopener">官方主题</a>去选择自己喜欢的主题样式</li><li>示例主题: <a href="hexo-theme-random">Random</a></li></ul><p>终端cd到 MyBlog 目录下执行如下命令：</p><pre class="line-numbers language-objc"><code class="language-objc">git clone https://github.com/stiekel/hexo-theme-random.git themes/random<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>修改_config.yml中的theme: landscape改为theme: random，然后重新执行hexo g来重新生成</p><p>终端cd到MyBlog目录下执行如下命令(每次部署文章的步骤)：</p><pre class="line-numbers language-objc"><code class="language-objc">hexo clean           //清除缓存文件 (db.json) 和已生成的静态文件 (public)hexo g             //生成缓存和静态文件hexo d             //重新部署到服务器<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="域名绑定"><a href="#域名绑定" class="headerlink" title="域名绑定"></a>域名绑定</h2><ul><li>现在使用的域名是Github提供的二级域名<code>XXX.github.io</code>，也可以绑定为自己的个性域名。</li><li>购买域名，可以到<a href="https://sg.godaddy.com/zh/" target="_blank" rel="noopener">GoDaddy官网</a>，现在 <code>GoDaddy</code>已经有中文版了，虽然国家显示是新加坡，但不影响使用, 还可使用支付宝支付</li><li>也可以到<a href="https://wanwang.aliyun.com/?utm_content=se_1010380" target="_blank" rel="noopener">阿里万网</a>购买, 我是在万网买的，可直接在其网站做域名解析</li></ul><h3 id="域名解析"><a href="#域名解析" class="headerlink" title="域名解析"></a>域名解析</h3><p>如果将域名指向一个域名，实现与被指向域名相同的访问效果，需要增加CNAME记录。登录万网，在你购买的域名后边点击：解析, 如下图</p><p><img src="http://upload-images.jianshu.io/upload_images/4122543-952aa0a8a84a089f.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Snip20180303_4.png"></p><p>进入解析页面后点击添加解析, 向你的 DNS 配置中添加 3 条记录, 如下图<br>注意CNAME记录添加的是username.github.io.(不要忘记后面的.), 可能最后一个点不显示(我的就不显示)</p><p><img src="http://upload-images.jianshu.io/upload_images/4122543-b2435667d603f844.png?imageMogr2/auto-orient/strip%7CimageView2/2/w/1240" alt="Snip20180303_5.png"></p><h3 id="设置GitHub配置信息"><a href="#设置GitHub配置信息" class="headerlink" title="设置GitHub配置信息"></a>设置GitHub配置信息</h3><ul><li>打开你的XXX.github.io项目地址, 找到设置页面</li><li>滚动到下方找到<code>GitHub Pages</code>模块, 在<code>Custom domain</code>, 输入你购买的域名, 点击Save保存</li></ul><h3 id="创建CNAME文件"><a href="#创建CNAME文件" class="headerlink" title="创建CNAME文件"></a>创建CNAME文件</h3><ul><li>在/MyBlog/themes/landscape/source目录下新建文件名为：CNAME文件，注意没有后缀名！直接将自己的域名写入</li><li><code>CNAME</code>一定要大写</li></ul><pre class="line-numbers language-objc"><code class="language-objc">//在终端cd到该目录下, 然后输入命令, 即可创建该文件touch CNAME<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><ul><li>完成上述步骤后, 终端cd到MyBlog目录下执行如下命令重新部署：</li><li>最后, 等十分钟左右，刷新浏览器，用你自己域名访问下试试</li></ul><pre class="line-numbers language-objc"><code class="language-objc">$ hexo clean$ hexo g$ hexo d<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><h4 id="至此也算终于大功告成了-感受一下-https-www-titanjun-top"><a href="#至此也算终于大功告成了-感受一下-https-www-titanjun-top" class="headerlink" title="至此也算终于大功告成了, 感受一下: https://www.titanjun.top"></a>至此也算终于大功告成了, 感受一下: <a href="https://www.titanjun.top" target="_blank" rel="noopener">https://www.titanjun.top</a></h4></blockquote>]]></content>
      
      
      <categories>
          
          <category> Hexo博客 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> Github </tag>
            
            <tag> HTTPS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二零一七年终总结</title>
      <link href="/2018/01/22/2017-conclusion/"/>
      <url>/2018/01/22/2017-conclusion/</url>
      
        <content type="html"><![CDATA[<div align="middle"><iframe frameborder="no" border="0" marginwidth="0" marginheight="0" width="330" height="86" src="//music.163.com/outchain/player?type=2&id=407679465&auto=1&height=66"></iframe></div>时间过得很快，终于等到放寒假了，虽然这几个月没有课，天天和放假也没啥区别呢。细数一下，还有5个月就要毕业了吧，大一刚入学的场景却依然清楚地记得，转眼间就成了老学长了呢。闲来无事，随便写写，有感而发，无病呻吟而已。<h1 id="2017"><a href="#2017" class="headerlink" title="2017"></a>2017</h1><hr><p>回顾我的2017，没做什么事，令我能记得就3件大事吧：</p><ul><li>失恋ing</li><li>ACM退役</li><li>顺利保研</li></ul><p><strong>第一件事</strong>就不想过多回忆了，<strong>2014.12.13 ~ 2017.03.01</strong>，曲终人散。<br><img src="749826.jpg" alt><br>最后引用《我的少女时代》里的一句话吧。</p><blockquote><p>每人都有一颗林真心，遇见是最美好的小幸运，谢谢你出现在我的青春里。</p></blockquote><p><img src="1.jpg" alt><br><strong>第二件事</strong>其实也是黯淡退出吧，大三下开始课程繁忙，也就没怎么训练了，再加上暑假考驾照，于是乎就退役了。回顾三年来，从大一入学时电脑都没怎么碰过的小白，到现在算法也略有所知，也是付出过很大的努力吧，毕竟当年每天刷题，为了一个bug而熬夜到凌晨。最后也算是混了个水水的金牌，奖项不算耀眼。但最重要的是从这段经历中，学到了拼搏、坚持的一种精神，这对以后的研究生涯想必也有很大帮助。<br><img src="2.jpg" alt><br><strong>第三件事</strong>也是意料之中吧，没有什么波折。纠结了很多，虽然<strong>专业第一</strong>，但是最后还是选择保了本校。要问原因，也许是校园情怀，也许是导师人很好，也许是为了方便更早研究，也许就是懒吧。现在尘埃落定，靠人靠天不如靠自己，继续努力吧。<br><img src="3.jpg" alt></p><p>过去的一年，学业未有很大长进，看着同学们整页的4.0绩点，心里倒也没有什么不平衡了。下学期保了研之后选了一门研究生的文本挖掘课，也马马虎虎读了几十篇论文，也算是对自然语言处理和深度学习入了个门，最后的presentation做的还算满意。</p><h1 id="2018"><a href="#2018" class="headerlink" title="2018"></a>2018</h1><hr><p>今年最重要的大事莫过于毕业论文了，因为以后要做的方向是句法分析，所以导师给我的毕业论文安排的就是《基于循环神经网络的成分句法分析》。虽然说是基于ACL2013的一篇论文改编的，但是目前为止，我还没有发现有人做和这个完全一样的。也许最后写的好的话可以直接发paper了。</p><p>但是目前基本的框架还没完全搭建起来吧，代码还不是很熟练，现在只写了一个最基础的动态规划+RNN。最近有如下计划：</p><ul><li>准备试一下动态规划+LSTM。</li><li>然后动态规划扩增一个维度，用来保存左右结点的head结点。</li><li>如果这个写好了，就可以和我github找到的PCFG+CYK代码融合了，准备加上每个结点的POS。</li><li>最后加入预训练词向量应该就基本完成了。</li></ul><p>希望能顺利毕业吧，前一段时间一直对一些实现细节有些困惑，代码还写错了，还以为理论错了。也不知道最后出来的结果会怎么样，希望能不错。</p><p>生活方面，最近半年越来越懒了，极少出门，睡得晚，起的也晚。最近买了把尤克里里，也算是陶冶陶冶情操吧，不至于一直盯着电脑。现在也小有长进，能弹一点点了。</p><p>现在能聊天的人越来越少了，QQ微信放那一天也不一定会有人来找，就算有人也多半是咨询问题的，等一个可以交心的人吧。有时我也想过，我是不是太像中央空调了，对所有人都这么有耐心，到头来却还是一个人，付出那么多最后还是一无所有。<br><img src="4.jpg" alt><br>最后还是祝自己2018年顺利吧，希望毕业顺利，研究生涯小有收获，最后等一个有缘人吧。</p><blockquote><p>我遇见谁，会有怎样的对白。<br>我等的人，她在多远的未来。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 随笔 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 随笔 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
